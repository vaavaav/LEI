Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Par
Rule 1     Par -> PA Par PF Par
Rule 2     Par -> <empty>

Terminals, with rules where they appear

PA                   : 1
PF                   : 1
error                : 

Nonterminals, with rules where they appear

Par                  : 1 1 0

Parsing method: LALR

state 0

    (0) S' -> . Par
    (1) Par -> . PA Par PF Par
    (2) Par -> .

    PA              shift and go to state 2
    $end            reduce using rule 2 (Par -> .)

    Par                            shift and go to state 1

state 1

    (0) S' -> Par .



state 2

    (1) Par -> PA . Par PF Par
    (1) Par -> . PA Par PF Par
    (2) Par -> .

    PA              shift and go to state 2
    PF              reduce using rule 2 (Par -> .)

    Par                            shift and go to state 3

state 3

    (1) Par -> PA Par . PF Par

    PF              shift and go to state 4


state 4

    (1) Par -> PA Par PF . Par
    (1) Par -> . PA Par PF Par
    (2) Par -> .

    PA              shift and go to state 2
    $end            reduce using rule 2 (Par -> .)
    PF              reduce using rule 2 (Par -> .)

    Par                            shift and go to state 5

state 5

    (1) Par -> PA Par PF Par .

    $end            reduce using rule 1 (Par -> PA Par PF Par .)
    PF              reduce using rule 1 (Par -> PA Par PF Par .)

